{"version":3,"file":"static/js/991.4636b936.chunk.js","mappings":"8PACaA,E,QAAcC,GAAAA,IAAH,qH,mBCSlBC,EAAc,SAAC,GAAqD,IAAD,IAAlDC,SAAYC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,aAClD,GAA8BC,EAAAA,EAAAA,YAA9B,eAAOC,EAAP,KAAgBC,EAAhB,KAOA,OALAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,GAAcC,EAAAA,EAAAA,IAAaN,EAAD,WANlB,MAOdG,EAAWE,EACZ,GAAE,CAACL,KAGF,UAACN,EAAD,YACE,gBAAKa,IAAKL,EAASM,IAAKV,KACxB,2BACE,wBAAKA,KACL,wCAAgBC,UAIvB,EAEDH,EAAYa,UAAY,CACtBZ,SAAUa,IAAAA,MAAe,CACvBZ,KAAMY,IAAAA,OAAAA,WACNX,UAAWW,IAAAA,OAAAA,WACXV,aAAcU,IAAAA,OAAAA,cAIlB,QCJA,EAvBa,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BV,EAAAA,EAAAA,UAAS,MAAvC,eAAOY,EAAP,KAAgBC,EAAhB,KAWA,OATAV,EAAAA,EAAAA,YAAU,WACR,IAAMW,GAAcC,EAAAA,EAAAA,IAAe,QAAD,UAAaL,GAAW,WACtDI,GACFA,EAAYE,MAAK,SAAAC,GACVA,GACLJ,EAAWI,EAAMC,KAAKC,KACvB,GAEJ,GAAE,CAACT,KAEF,SAACU,EAAA,EAAD,UACGR,GACCA,EAAQS,KAAI,SAAAzB,GACV,OAAO,SAAC,EAAD,CAAaA,SAAUA,GAAeA,EAAS0B,GACvD,KAGR,C,uDC7BKF,EAAU,SAAC,GAAkB,IAAhBG,EAAe,EAAfA,SACjB,OAAO,6BAAUA,GAClB,EAEDH,EAAQZ,UAAY,CAClBe,SAAUC,IAAAA,KAAAA,YAGZ,K","sources":["components/CastDetails/CastDetails.styled.js","components/CastDetails/CastDetails.jsx","components/Cast/Cast.jsx","components/Section/Section.jsx"],"sourcesContent":["import styled from 'styled-components';\nexport const DivCastInfo = styled.div`\n    display: flex;\n    border: 1px solid grey;\n    padding: 5px;\n    margin-bottom: 5px;\n`;","\nimport { useState, useEffect } from 'react';\nimport PropType from 'prop-types';\n\nimport { DivCastInfo } from './CastDetails.styled';\n\nimport { tmdbImageAPI } from 'api/tmdbAPI';\n\nconst WIDTH_IMG = 200;\n\nconst CastDetails = ({ castItem: { name, character, profile_path } }) => {\n  const [imgLink, setImgLink] = useState();\n\n  useEffect(() => {\n    const fullImgLink = tmdbImageAPI(profile_path, `w${WIDTH_IMG}`);\n    setImgLink(fullImgLink);\n  }, [profile_path]);\n\n  return (\n    <DivCastInfo>\n      <img src={imgLink} alt={name} />\n      <ul>\n        <li>{name}</li>\n        <li>character: {character}</li>\n      </ul>\n    </DivCastInfo>\n  );\n};\n\nCastDetails.protoType = {\n  castItem: PropType.shape({\n    name: PropType.string.isRequired,\n    character: PropType.string.isRequired,\n    profile_path: PropType.string.isRequired,\n  }),\n};\n\nexport default CastDetails;","//React\n//import { useOutletContext } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n//Component export default\nimport Section from 'components/Section/Section.jsx';\nimport CastDetails from 'components/CastDetails/CastDetails.jsx';\n//API\nimport { tmdbMovieIdAPI } from 'api/tmdbAPI';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [castObj, setCastObj] = useState(null);\n\n  useEffect(() => {\n    const castPromise = tmdbMovieIdAPI('movie', `${movieId}`, 'credits');\n    if (castPromise) {\n      castPromise.then(value => {\n        if (!value) return;\n        setCastObj(value.data.cast);\n      });\n    }\n  }, [movieId]);\n  return (\n    <Section>\n      {castObj &&\n        castObj.map(castItem => {\n          return <CastDetails castItem={castItem} key={castItem.id} />;\n        })}\n    </Section>\n  );\n};\n\nexport default Cast;","import PropTypes from 'prop-types';\n\nconst Section = ({ children }) => {\n  return <section>{children}</section>;\n};\n\nSection.protoType = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;"],"names":["DivCastInfo","styled","CastDetails","castItem","name","character","profile_path","useState","imgLink","setImgLink","useEffect","fullImgLink","tmdbImageAPI","src","alt","protoType","PropType","movieId","useParams","castObj","setCastObj","castPromise","tmdbMovieIdAPI","then","value","data","cast","Section","map","id","children","PropTypes"],"sourceRoot":""}